#!/bin/bash

# Script de prueba para EVENT-DRIVEN automatizaciones
# Ejecutar desde la carpeta frontend

echo "üöÄ Probando sistema EVENT-DRIVEN de automatizaciones..."
echo "======================================================="

# URL base (cambiar en producci√≥n)
BASE_URL="http://localhost:3000"
# BASE_URL="https://tu-dominio.vercel.app"

# Business ID que queremos probar
BUSINESS_ID="f2a24619-5016-490c-9dc9-dd08fd6549b3"

echo ""
echo "=== COMPARACI√ìN: LEGACY vs EVENT-DRIVEN ==="

echo ""
echo "1. üìú Probando sistema LEGACY (viejo)..."
echo "‚ö†Ô∏è  Esto hace queries masivas y es lento"
curl -X GET "$BASE_URL/api/automations?business_id=$BUSINESS_ID&mode=legacy" \
  -H "Content-Type: application/json" \
  | jq '.'

echo ""
echo "2. üöÄ Probando sistema EVENT-DRIVEN (nuevo)..."
echo "‚úÖ Esto es optimizado y r√°pido"
curl -X GET "$BASE_URL/api/automations?business_id=$BUSINESS_ID&mode=event-driven" \
  -H "Content-Type: application/json" \
  | jq '.'

echo ""
echo "=== EVENTOS ESPEC√çFICOS ==="

echo ""
echo "3. üéÇ Evento de cumplea√±os (optimizado)..."
curl -X GET "$BASE_URL/api/automation-events?event=birthdays" \
  -H "Content-Type: application/json" \
  | jq '.'

echo ""
echo "4. üí§ Evento de clientes inactivos..."
curl -X GET "$BASE_URL/api/automation-events?event=inactive&business_id=$BUSINESS_ID" \
  -H "Content-Type: application/json" \
  | jq '.'

echo ""
echo "5. üß™ Simular registro de cliente (trigger autom√°tico)..."
curl -X GET "$BASE_URL/api/automation-events?event=test-customer&business_id=$BUSINESS_ID" \
  -H "Content-Type: application/json" \
  | jq '.'

echo ""
echo "6. üî• Probar notificaci√≥n AUTOM√ÅTICA de puntos..."
echo "Ingresa el customer_id para probar carga de puntos (o Enter para omitir):"
read CUSTOMER_ID

if [ ! -z "$CUSTOMER_ID" ]; then
  echo "Ingresa el tel√©fono del cliente:"
  read CUSTOMER_PHONE
  
  if [ ! -z "$CUSTOMER_PHONE" ]; then
    echo "‚≠ê Cargando puntos (esto enviar√° notificaci√≥n AUTOM√ÅTICAMENTE)..."
    curl -X POST "$BASE_URL/api/points/load" \
      -H "Content-Type: application/json" \
      -d "{
        \"customer_id\": \"$CUSTOMER_ID\",
        \"business_id\": \"$BUSINESS_ID\",
        \"customer_phone\": \"$CUSTOMER_PHONE\",
        \"amount_spent\": 1000,
        \"points_awarded\": 50,
        \"loaded_by\": \"test-user\"
      }" \
      | jq '.'
  fi
fi

echo ""
echo "7. üìù Simular registro de cliente en tiempo real..."
curl -X POST "$BASE_URL/api/customers" \
  -H "Content-Type: application/json" \
  -d "{
    \"business_id\": \"$BUSINESS_ID\",
    \"name\": \"Cliente Prueba Event-Driven\",
    \"phone\": \"549123456789\",
    \"email\": null,
    \"instagram_username\": null,
    \"birthday\": null,
    \"points\": 0
  }" \
  | jq '.'

echo ""
echo "‚úÖ Pruebas EVENT-DRIVEN completadas!"
echo ""
echo "üéØ BENEFICIOS DEL SISTEMA EVENT-DRIVEN:"
echo "  ‚úÖ Sin queries masivas (m√°s r√°pido)"
echo "  ‚úÖ Escalable a millones de clientes"  
echo "  ‚úÖ Procesamiento en tiempo real"
echo "  ‚úÖ Eventos espec√≠ficos optimizados"
echo "  ‚úÖ Puntos autom√°ticos instant√°neos"
echo "  ‚úÖ Registro de clientes con triggers autom√°ticos"
echo ""
echo "üî• EVENTOS DISPONIBLES:"
echo "  - üéÇ /api/automation-events?event=birthdays"
echo "  - üí§ /api/automation-events?event=inactive&business_id=UUID"
echo "  - üß™ /api/automation-events?event=test-customer"
echo "  - ‚≠ê /api/points/load (autom√°tico)"
echo "  - üìù /api/customers POST (trigger autom√°tico)"
echo ""
echo "üöÄ Para usar en producci√≥n:"
echo "  - Cambia cron jobs a: /api/automations?mode=event-driven"
echo "  - O mejor: /api/automation-events?event=birthdays (diario)"
echo "  - Resto es autom√°tico al cargar puntos o registrar clientes"